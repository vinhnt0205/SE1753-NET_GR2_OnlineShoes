package com.example.se1753net_gr2_onlineshoes.activity;

import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.example.se1753net_gr2_onlineshoes.R;

import org.mindrot.jbcrypt.BCrypt;

public class activity_reset_password extends AppCompatActivity {

    private EditText etNewPassword, etConfirmPassword;
    private Button btnReset;
    private String resetCode;

//    @Override
//    protected void onCreate(Bundle savedInstanceState) {
//        super.onCreate(savedInstanceState);
//        setContentView(R.layout.activity_reset_password);
//
//        etNewPassword = findViewById(R.id.etNewPassword);
//        etConfirmPassword = findViewById(R.id.etConfirmPassword);
//        btnReset = findViewById(R.id.btnReset);
//
//        // L·∫•y m√£ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u t·ª´ link
//        Uri uri = getIntent().getData();
//        if (uri != null) {
//            resetCode = uri.getQueryParameter("code");
//            if (!TextUtils.isEmpty(resetCode)) {
//                Toast.makeText(this, "M√£ x√°c nh·∫≠n: " + resetCode, Toast.LENGTH_SHORT).show();
//            }
//        }
//
//        btnReset.setOnClickListener(v -> saveNewPassword());
//    }
//
//    private void saveNewPassword() {
//        String newPassword = etNewPassword.getText().toString().trim();
//        String confirmPassword = etConfirmPassword.getText().toString().trim();
//
//        if (TextUtils.isEmpty(newPassword) || TextUtils.isEmpty(confirmPassword)) {
//            Toast.makeText(this, "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin", Toast.LENGTH_SHORT).show();
//            return;
//        }
//
//        if (!newPassword.equals(confirmPassword)) {
//            Toast.makeText(this, "M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp", Toast.LENGTH_SHORT).show();
//            return;
//        }
//
//        // L·∫•y m√£ v√† th·ªùi gian h·∫øt h·∫°n t·ª´ SharedPreferences
//        SharedPreferences sharedPreferences = getSharedPreferences("ResetPrefs", MODE_PRIVATE);
//        String storedResetCode = sharedPreferences.getString("resetCode", "");
//        long expiryTime = sharedPreferences.getLong("resetExpiry", 0);
//        String resetEmail = sharedPreferences.getString("resetEmail", "");
//
//        if (TextUtils.isEmpty(storedResetCode) || !storedResetCode.equals(resetCode) || System.currentTimeMillis() > expiryTime) {
//            Toast.makeText(this, "M√£ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n!", Toast.LENGTH_SHORT).show();
//            return;
//        }
//
//        // C·∫≠p nh·∫≠t m·∫≠t kh·∫©u
//        SharedPreferences userPreferences = getSharedPreferences("UserData", MODE_PRIVATE);
//        SharedPreferences.Editor userEditor = userPreferences.edit();
//        userEditor.putString("password_" + resetEmail, newPassword); // L∆∞u theo email ƒë·ªÉ tr√°nh ghi ƒë√® user kh√°c
//        userEditor.apply();
//
//        // X√≥a resetCode sau khi d√πng
//        sharedPreferences.edit().clear().apply();
//
//        Toast.makeText(this, "M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!", Toast.LENGTH_LONG).show();
//        finish();
//    }
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_reset_password);

    etNewPassword = findViewById(R.id.etNewPassword);
    etConfirmPassword = findViewById(R.id.etConfirmPassword);
    btnReset = findViewById(R.id.btnReset);

    // L·∫•y m√£ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u t·ª´ link
    Uri uri = getIntent().getData();
    if (uri != null) {
        resetCode = uri.getQueryParameter("code");

        // L·∫•y m√£ reset v√† th·ªùi gian h·∫øt h·∫°n t·ª´ SharedPreferences
        SharedPreferences sharedPreferences = getSharedPreferences("ResetPrefs", MODE_PRIVATE);
        String storedResetCode = sharedPreferences.getString("resetCode", "");
        long expiryTime = sharedPreferences.getLong("resetExpiry", 0);

        // üëâ Log ki·ªÉm tra
        Log.d("RESET_PAGE", "Received ResetCode: " + resetCode);
        Log.d("RESET_PAGE", "Stored ResetCode: " + storedResetCode + " | Expiry: " + expiryTime);

        // Ki·ªÉm tra m√£ c√≥ h·ª£p l·ªá kh√¥ng
        if (TextUtils.isEmpty(resetCode) || !resetCode.equals(storedResetCode) || System.currentTimeMillis() > expiryTime) {
            Toast.makeText(this, "M√£ kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n!", Toast.LENGTH_SHORT).show();
            finish();
            return;
        }

        Toast.makeText(this, "M√£ h·ª£p l·ªá, h√£y ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u!", Toast.LENGTH_SHORT).show();
    } else {
        Toast.makeText(this, "Kh√¥ng t√¨m th·∫•y m√£ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u!", Toast.LENGTH_SHORT).show();
        finish();
    }

    btnReset.setOnClickListener(v -> saveNewPassword());
}
    private void saveNewPassword() {
        String newPassword = etNewPassword.getText().toString().trim();
        String confirmPassword = etConfirmPassword.getText().toString().trim();

        if (TextUtils.isEmpty(newPassword) || TextUtils.isEmpty(confirmPassword)) {
            Toast.makeText(this, "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin", Toast.LENGTH_SHORT).show();
            return;
        }

        if (!newPassword.equals(confirmPassword)) {
            Toast.makeText(this, "M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp", Toast.LENGTH_SHORT).show();
            return;
        }

        // L·∫•y email c·ªßa ng∆∞·ªùi d√πng t·ª´ SharedPreferences
        SharedPreferences sharedPreferences = getSharedPreferences("ResetPrefs", MODE_PRIVATE);
        String resetEmail = sharedPreferences.getString("resetEmail", "");
        String storedResetCode = sharedPreferences.getString("resetCode", "");
        long expiryTime = sharedPreferences.getLong("resetExpiry", 0);

        // Ki·ªÉm tra m√£ c√≥ h·ª£p l·ªá kh√¥ng
        if (TextUtils.isEmpty(storedResetCode) || !storedResetCode.equals(resetCode) || System.currentTimeMillis() > expiryTime) {
            Toast.makeText(this, "M√£ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n!", Toast.LENGTH_SHORT).show();
            return;
        }

        // Hash m·∫≠t kh·∫©u tr∆∞·ªõc khi l∆∞u
        String hashedPassword = BCrypt.hashpw(newPassword, BCrypt.gensalt(10));

        // L∆∞u m·∫≠t kh·∫©u ƒë√£ hash v√†o SharedPreferences
        SharedPreferences userPreferences = getSharedPreferences("UserData", MODE_PRIVATE);
        SharedPreferences.Editor userEditor = userPreferences.edit();
        userEditor.putString("password_" + resetEmail, hashedPassword);
        userEditor.apply();

        // ƒê·ªçc l·∫°i ƒë·ªÉ ki·ªÉm tra xem ƒë√£ l∆∞u th√†nh c√¥ng ch∆∞a
        String savedPassword = userPreferences.getString("password_" + resetEmail, "");
        Log.d("PASSWORD_DEBUG", "Hashed Password Saved: " + savedPassword);

        if (!TextUtils.isEmpty(savedPassword)) {
            Toast.makeText(this, "M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!", Toast.LENGTH_LONG).show();
        } else {
            Toast.makeText(this, "L·ªói khi l∆∞u m·∫≠t kh·∫©u!", Toast.LENGTH_LONG).show();
        }

        // X√≥a resetCode sau khi s·ª≠ d·ª•ng
        sharedPreferences.edit().clear().apply();

        finish();
    }




}
